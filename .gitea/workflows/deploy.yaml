name: deploy
on:
  workflow_dispatch: null
  push:
    branches:
      - main
env:
  AUTHENTIK_INSECURE: "false"
  AUTHENTIK_TOKEN: ${{ secrets.AUTHENTIK_TOKEN }}
  AUTHENTIK_URL: https://login.sapslaj.cloud
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_REGION: us-east-1
  AWS_REGION: us-east-1
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
  CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
  GH_ACTIONS_READ_TOKEN: ${{ secrets.GH_ACTIONS_READ_TOKEN }}
  INFISICAL_API_URL: https://infisical.sapslaj.cloud/api
  INFISICAL_CLIENT_ID: ${{ secrets.INFISICAL_CLIENT_ID }}
  INFISICAL_CLIENT_SECRET: ${{ secrets.INFISICAL_CLIENT_SECRET }}
  INFISICAL_HOST: https://infisical.sapslaj.cloud
  INFISICAL_UNIVERSAL_AUTH_CLIENT_ID: ${{ secrets.INFISICAL_CLIENT_ID }}
  INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET: ${{ secrets.INFISICAL_CLIENT_SECRET }}
  NODE_AUTH_TOKEN: ${{ secrets.GH_ACTIONS_READ_TOKEN }}
  PROXMOX_VE_ENDPOINT: ${{ secrets.PROXMOX_VE_ENDPOINT }}
  PROXMOX_VE_INSECURE: "true"
  PROXMOX_VE_PASSWORD: ${{ secrets.PROXMOX_VE_PASSWORD }}
  PROXMOX_VE_USERNAME: ${{ secrets.PROXMOX_VE_USERNAME }}
  PULUMI_CONFIG_PASSPHRASE: ""
  TAILSCALE_API_KEY: ${{ secrets.TAILSCALE_API_KEY }}
  VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
  VYOS_HOST: ${{ secrets.VYOS_HOST }}
  VYOS_PASSWORD: ${{ secrets.VYOS_PASSWORD }}
  VYOS_USERNAME: ${{ secrets.VYOS_USERNAME }}
jobs:
  deploy-cluster:
    runs-on: ubuntu-latest
    needs: []
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/cluster
  deploy-external-secrets-operator:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/external-secrets-operator
  deploy-crds:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/crds
  deploy-nodegroups:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/nodegroups
  deploy-core:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/core
  deploy-adguardhome-sync:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/adguardhome-sync
  deploy-aws-credentials-secret-injector:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/aws-credentials-secret-injector
  deploy-cloudnative-pg:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/cloudnative-pg
  deploy-nfs-provisioner:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/nfs-provisioner
  deploy-opensearch-operator:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/opensearch-operator
  deploy-reloader:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/reloader
  deploy-shortrack:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/shortrack
  deploy-traefik:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/traefik
  deploy-victoria-metrics:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/victoria-metrics
  deploy-librenms:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/librenms
  deploy-netbox:
    runs-on: ubuntu-latest
    needs:
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/netbox
  deploy-authentik:
    runs-on: ubuntu-latest
    needs:
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
      - deploy-shortrack
      - deploy-traefik
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/authentik
  deploy-traefik-failover:
    runs-on: ubuntu-latest
    needs:
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
      - deploy-traefik
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/traefik-failover
  deploy-external-services:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-traefik
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/external-services
  deploy-gitea:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/gitea
  deploy-grafana:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
      - deploy-shortrack
      - deploy-traefik
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/grafana
  deploy-immich:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/immich
  deploy-infisical:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-external-secrets-operator
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/infisical
  deploy-jaeger:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nodegroups
      - deploy-opensearch-operator
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/jaeger
  deploy-nextcloud:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/nextcloud
  deploy-oxidized:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-nfs-provisioner
      - deploy-nodegroups
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/oxidized
  deploy-infisical-secrets-operator:
    runs-on: ubuntu-latest
    needs:
      - deploy-authentik
      - deploy-cloudnative-pg
      - deploy-cluster
      - deploy-core
      - deploy-crds
      - deploy-infisical
      - deploy-nodegroups
      - deploy-shortrack
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json
          registry-url: https://npm.pkg.github.com
      - run: npm ci --ignore-scripts
      - name: Create pulumi-state AWS profile
        shell: bash
        run: |
          mkdir -p ~/.aws
          cat >> ~/.aws/credentials << EOF
          [pulumi-state]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF
          cat >> ~/.aws/config << EOF
          [profile pulumi-state]
          region=us-east-1
          output=json
          EOF
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: prod
          cloud-url: s3://sapslaj-tf-state?region=us-east-1&awssdk=v2&profile=pulumi-state
          work-dir: ./stacks/infisical-secrets-operator
