// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StagePromptField extends pulumi.CustomResource {
  /**
   * Get an existing StagePromptField resource's state with the given name, ID, and optional extra
   * properties used to qualify the lookup.
   *
   * @param name The _unique_ name of the resulting resource.
   * @param id The _unique_ provider ID of the resource to lookup.
   * @param state Any extra arguments used during the lookup.
   * @param opts Optional settings to control the behavior of the CustomResource.
   */
  public static get(
    name: string,
    id: pulumi.Input<pulumi.ID>,
    state?: StagePromptFieldState,
    opts?: pulumi.CustomResourceOptions,
  ): StagePromptField {
    return new StagePromptField(name, <any> state, { ...opts, id: id });
  }

  /** @internal */
  public static readonly __pulumiType = "authentik:index/stagePromptField:StagePromptField";

  /**
   * Returns true if the given object is an instance of StagePromptField.  This is designed to work even
   * when multiple copies of the Pulumi SDK have been loaded into the same process.
   */
  public static isInstance(obj: any): obj is StagePromptField {
    if (obj === undefined || obj === null) {
      return false;
    }
    return obj["__pulumiType"] === StagePromptField.__pulumiType;
  }

  public readonly fieldKey!: pulumi.Output<string>;
  public readonly initialValue!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `false`.
   */
  public readonly initialValueExpression!: pulumi.Output<boolean | undefined>;
  public readonly label!: pulumi.Output<string>;
  public readonly name!: pulumi.Output<string>;
  public readonly order!: pulumi.Output<number | undefined>;
  public readonly placeholder!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `false`.
   */
  public readonly placeholderExpression!: pulumi.Output<boolean | undefined>;
  /**
   * Defaults to `false`.
   */
  public readonly required!: pulumi.Output<boolean | undefined>;
  public readonly stagePromptFieldId!: pulumi.Output<string>;
  /**
   * Defaults to ``.
   */
  public readonly subText!: pulumi.Output<string | undefined>;
  /**
   * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
   * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
   * `static` - `ak-locale`
   */
  public readonly type!: pulumi.Output<string>;

  /**
   * Create a StagePromptField resource with the given unique name, arguments, and options.
   *
   * @param name The _unique_ name of the resource.
   * @param args The arguments to use to populate this resource's properties.
   * @param opts A bag of options that control this resource's behavior.
   */
  constructor(name: string, args: StagePromptFieldArgs, opts?: pulumi.CustomResourceOptions);
  constructor(
    name: string,
    argsOrState?: StagePromptFieldArgs | StagePromptFieldState,
    opts?: pulumi.CustomResourceOptions,
  ) {
    let resourceInputs: pulumi.Inputs = {};
    opts = opts || {};
    if (opts.id) {
      const state = argsOrState as StagePromptFieldState | undefined;
      resourceInputs["fieldKey"] = state ? state.fieldKey : undefined;
      resourceInputs["initialValue"] = state ? state.initialValue : undefined;
      resourceInputs["initialValueExpression"] = state ? state.initialValueExpression : undefined;
      resourceInputs["label"] = state ? state.label : undefined;
      resourceInputs["name"] = state ? state.name : undefined;
      resourceInputs["order"] = state ? state.order : undefined;
      resourceInputs["placeholder"] = state ? state.placeholder : undefined;
      resourceInputs["placeholderExpression"] = state ? state.placeholderExpression : undefined;
      resourceInputs["required"] = state ? state.required : undefined;
      resourceInputs["stagePromptFieldId"] = state ? state.stagePromptFieldId : undefined;
      resourceInputs["subText"] = state ? state.subText : undefined;
      resourceInputs["type"] = state ? state.type : undefined;
    } else {
      const args = argsOrState as StagePromptFieldArgs | undefined;
      if ((!args || args.fieldKey === undefined) && !opts.urn) {
        throw new Error("Missing required property 'fieldKey'");
      }
      if ((!args || args.label === undefined) && !opts.urn) {
        throw new Error("Missing required property 'label'");
      }
      if ((!args || args.type === undefined) && !opts.urn) {
        throw new Error("Missing required property 'type'");
      }
      resourceInputs["fieldKey"] = args ? args.fieldKey : undefined;
      resourceInputs["initialValue"] = args ? args.initialValue : undefined;
      resourceInputs["initialValueExpression"] = args ? args.initialValueExpression : undefined;
      resourceInputs["label"] = args ? args.label : undefined;
      resourceInputs["name"] = args ? args.name : undefined;
      resourceInputs["order"] = args ? args.order : undefined;
      resourceInputs["placeholder"] = args ? args.placeholder : undefined;
      resourceInputs["placeholderExpression"] = args ? args.placeholderExpression : undefined;
      resourceInputs["required"] = args ? args.required : undefined;
      resourceInputs["stagePromptFieldId"] = args ? args.stagePromptFieldId : undefined;
      resourceInputs["subText"] = args ? args.subText : undefined;
      resourceInputs["type"] = args ? args.type : undefined;
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    super(StagePromptField.__pulumiType, name, resourceInputs, opts, false, /*dependency*/ utilities.getPackage());
  }
}

/**
 * Input properties used for looking up and filtering StagePromptField resources.
 */
export interface StagePromptFieldState {
  fieldKey?: pulumi.Input<string>;
  initialValue?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  initialValueExpression?: pulumi.Input<boolean>;
  label?: pulumi.Input<string>;
  name?: pulumi.Input<string>;
  order?: pulumi.Input<number>;
  placeholder?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  placeholderExpression?: pulumi.Input<boolean>;
  /**
   * Defaults to `false`.
   */
  required?: pulumi.Input<boolean>;
  stagePromptFieldId?: pulumi.Input<string>;
  /**
   * Defaults to ``.
   */
  subText?: pulumi.Input<string>;
  /**
   * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
   * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
   * `static` - `ak-locale`
   */
  type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StagePromptField resource.
 */
export interface StagePromptFieldArgs {
  fieldKey: pulumi.Input<string>;
  initialValue?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  initialValueExpression?: pulumi.Input<boolean>;
  label: pulumi.Input<string>;
  name?: pulumi.Input<string>;
  order?: pulumi.Input<number>;
  placeholder?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  placeholderExpression?: pulumi.Input<boolean>;
  /**
   * Defaults to `false`.
   */
  required?: pulumi.Input<boolean>;
  stagePromptFieldId?: pulumi.Input<string>;
  /**
   * Defaults to ``.
   */
  subText?: pulumi.Input<string>;
  /**
   * Allowed values: - `text` - `text_area` - `text_read_only` - `text_area_read_only` - `username` - `email` - `password` -
   * `number` - `checkbox` - `radio-button-group` - `dropdown` - `date` - `date-time` - `file` - `separator` - `hidden` -
   * `static` - `ak-locale`
   */
  type: pulumi.Input<string>;
}
