// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StageEmail extends pulumi.CustomResource {
  /**
   * Get an existing StageEmail resource's state with the given name, ID, and optional extra
   * properties used to qualify the lookup.
   *
   * @param name The _unique_ name of the resulting resource.
   * @param id The _unique_ provider ID of the resource to lookup.
   * @param state Any extra arguments used during the lookup.
   * @param opts Optional settings to control the behavior of the CustomResource.
   */
  public static get(
    name: string,
    id: pulumi.Input<pulumi.ID>,
    state?: StageEmailState,
    opts?: pulumi.CustomResourceOptions,
  ): StageEmail {
    return new StageEmail(name, <any> state, { ...opts, id: id });
  }

  /** @internal */
  public static readonly __pulumiType = "authentik:index/stageEmail:StageEmail";

  /**
   * Returns true if the given object is an instance of StageEmail.  This is designed to work even
   * when multiple copies of the Pulumi SDK have been loaded into the same process.
   */
  public static isInstance(obj: any): obj is StageEmail {
    if (obj === undefined || obj === null) {
      return false;
    }
    return obj["__pulumiType"] === StageEmail.__pulumiType;
  }

  /**
   * Defaults to `false`.
   */
  public readonly activateUserOnSuccess!: pulumi.Output<boolean | undefined>;
  /**
   * Defaults to `system@authentik.local`.
   */
  public readonly fromAddress!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `localhost`.
   */
  public readonly host!: pulumi.Output<string | undefined>;
  public readonly name!: pulumi.Output<string>;
  public readonly password!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `25`.
   */
  public readonly port!: pulumi.Output<number | undefined>;
  public readonly stageEmailId!: pulumi.Output<string>;
  /**
   * Defaults to `authentik`.
   */
  public readonly subject!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `email/password_reset.html`.
   */
  public readonly template!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `30`.
   */
  public readonly timeout!: pulumi.Output<number | undefined>;
  /**
   * Defaults to `minutes=30`.
   */
  public readonly tokenExpiry!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `true`.
   */
  public readonly useGlobalSettings!: pulumi.Output<boolean | undefined>;
  public readonly useSsl!: pulumi.Output<boolean | undefined>;
  public readonly useTls!: pulumi.Output<boolean | undefined>;
  public readonly username!: pulumi.Output<string | undefined>;

  /**
   * Create a StageEmail resource with the given unique name, arguments, and options.
   *
   * @param name The _unique_ name of the resource.
   * @param args The arguments to use to populate this resource's properties.
   * @param opts A bag of options that control this resource's behavior.
   */
  constructor(name: string, args?: StageEmailArgs, opts?: pulumi.CustomResourceOptions);
  constructor(name: string, argsOrState?: StageEmailArgs | StageEmailState, opts?: pulumi.CustomResourceOptions) {
    let resourceInputs: pulumi.Inputs = {};
    opts = opts || {};
    if (opts.id) {
      const state = argsOrState as StageEmailState | undefined;
      resourceInputs["activateUserOnSuccess"] = state ? state.activateUserOnSuccess : undefined;
      resourceInputs["fromAddress"] = state ? state.fromAddress : undefined;
      resourceInputs["host"] = state ? state.host : undefined;
      resourceInputs["name"] = state ? state.name : undefined;
      resourceInputs["password"] = state ? state.password : undefined;
      resourceInputs["port"] = state ? state.port : undefined;
      resourceInputs["stageEmailId"] = state ? state.stageEmailId : undefined;
      resourceInputs["subject"] = state ? state.subject : undefined;
      resourceInputs["template"] = state ? state.template : undefined;
      resourceInputs["timeout"] = state ? state.timeout : undefined;
      resourceInputs["tokenExpiry"] = state ? state.tokenExpiry : undefined;
      resourceInputs["useGlobalSettings"] = state ? state.useGlobalSettings : undefined;
      resourceInputs["useSsl"] = state ? state.useSsl : undefined;
      resourceInputs["useTls"] = state ? state.useTls : undefined;
      resourceInputs["username"] = state ? state.username : undefined;
    } else {
      const args = argsOrState as StageEmailArgs | undefined;
      resourceInputs["activateUserOnSuccess"] = args ? args.activateUserOnSuccess : undefined;
      resourceInputs["fromAddress"] = args ? args.fromAddress : undefined;
      resourceInputs["host"] = args ? args.host : undefined;
      resourceInputs["name"] = args ? args.name : undefined;
      resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
      resourceInputs["port"] = args ? args.port : undefined;
      resourceInputs["stageEmailId"] = args ? args.stageEmailId : undefined;
      resourceInputs["subject"] = args ? args.subject : undefined;
      resourceInputs["template"] = args ? args.template : undefined;
      resourceInputs["timeout"] = args ? args.timeout : undefined;
      resourceInputs["tokenExpiry"] = args ? args.tokenExpiry : undefined;
      resourceInputs["useGlobalSettings"] = args ? args.useGlobalSettings : undefined;
      resourceInputs["useSsl"] = args ? args.useSsl : undefined;
      resourceInputs["useTls"] = args ? args.useTls : undefined;
      resourceInputs["username"] = args ? args.username : undefined;
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    const secretOpts = { additionalSecretOutputs: ["password"] };
    opts = pulumi.mergeOptions(opts, secretOpts);
    super(StageEmail.__pulumiType, name, resourceInputs, opts, false, /*dependency*/ utilities.getPackage());
  }
}

/**
 * Input properties used for looking up and filtering StageEmail resources.
 */
export interface StageEmailState {
  /**
   * Defaults to `false`.
   */
  activateUserOnSuccess?: pulumi.Input<boolean>;
  /**
   * Defaults to `system@authentik.local`.
   */
  fromAddress?: pulumi.Input<string>;
  /**
   * Defaults to `localhost`.
   */
  host?: pulumi.Input<string>;
  name?: pulumi.Input<string>;
  password?: pulumi.Input<string>;
  /**
   * Defaults to `25`.
   */
  port?: pulumi.Input<number>;
  stageEmailId?: pulumi.Input<string>;
  /**
   * Defaults to `authentik`.
   */
  subject?: pulumi.Input<string>;
  /**
   * Defaults to `email/password_reset.html`.
   */
  template?: pulumi.Input<string>;
  /**
   * Defaults to `30`.
   */
  timeout?: pulumi.Input<number>;
  /**
   * Defaults to `minutes=30`.
   */
  tokenExpiry?: pulumi.Input<string>;
  /**
   * Defaults to `true`.
   */
  useGlobalSettings?: pulumi.Input<boolean>;
  useSsl?: pulumi.Input<boolean>;
  useTls?: pulumi.Input<boolean>;
  username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StageEmail resource.
 */
export interface StageEmailArgs {
  /**
   * Defaults to `false`.
   */
  activateUserOnSuccess?: pulumi.Input<boolean>;
  /**
   * Defaults to `system@authentik.local`.
   */
  fromAddress?: pulumi.Input<string>;
  /**
   * Defaults to `localhost`.
   */
  host?: pulumi.Input<string>;
  name?: pulumi.Input<string>;
  password?: pulumi.Input<string>;
  /**
   * Defaults to `25`.
   */
  port?: pulumi.Input<number>;
  stageEmailId?: pulumi.Input<string>;
  /**
   * Defaults to `authentik`.
   */
  subject?: pulumi.Input<string>;
  /**
   * Defaults to `email/password_reset.html`.
   */
  template?: pulumi.Input<string>;
  /**
   * Defaults to `30`.
   */
  timeout?: pulumi.Input<number>;
  /**
   * Defaults to `minutes=30`.
   */
  tokenExpiry?: pulumi.Input<string>;
  /**
   * Defaults to `true`.
   */
  useGlobalSettings?: pulumi.Input<boolean>;
  useSsl?: pulumi.Input<boolean>;
  useTls?: pulumi.Input<boolean>;
  username?: pulumi.Input<string>;
}
