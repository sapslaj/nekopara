// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Group extends pulumi.CustomResource {
  /**
   * Get an existing Group resource's state with the given name, ID, and optional extra
   * properties used to qualify the lookup.
   *
   * @param name The _unique_ name of the resulting resource.
   * @param id The _unique_ provider ID of the resource to lookup.
   * @param state Any extra arguments used during the lookup.
   * @param opts Optional settings to control the behavior of the CustomResource.
   */
  public static get(
    name: string,
    id: pulumi.Input<pulumi.ID>,
    state?: GroupState,
    opts?: pulumi.CustomResourceOptions,
  ): Group {
    return new Group(name, <any> state, { ...opts, id: id });
  }

  /** @internal */
  public static readonly __pulumiType = "authentik:index/group:Group";

  /**
   * Returns true if the given object is an instance of Group.  This is designed to work even
   * when multiple copies of the Pulumi SDK have been loaded into the same process.
   */
  public static isInstance(obj: any): obj is Group {
    if (obj === undefined || obj === null) {
      return false;
    }
    return obj["__pulumiType"] === Group.__pulumiType;
  }

  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  public readonly attributes!: pulumi.Output<string | undefined>;
  public readonly groupId!: pulumi.Output<string>;
  /**
   * Defaults to `false`.
   */
  public readonly isSuperuser!: pulumi.Output<boolean | undefined>;
  public readonly name!: pulumi.Output<string>;
  public readonly parent!: pulumi.Output<string | undefined>;
  public readonly roles!: pulumi.Output<string[] | undefined>;
  /**
   * Generated.
   */
  public readonly users!: pulumi.Output<number[]>;

  /**
   * Create a Group resource with the given unique name, arguments, and options.
   *
   * @param name The _unique_ name of the resource.
   * @param args The arguments to use to populate this resource's properties.
   * @param opts A bag of options that control this resource's behavior.
   */
  constructor(name: string, args?: GroupArgs, opts?: pulumi.CustomResourceOptions);
  constructor(name: string, argsOrState?: GroupArgs | GroupState, opts?: pulumi.CustomResourceOptions) {
    let resourceInputs: pulumi.Inputs = {};
    opts = opts || {};
    if (opts.id) {
      const state = argsOrState as GroupState | undefined;
      resourceInputs["attributes"] = state ? state.attributes : undefined;
      resourceInputs["groupId"] = state ? state.groupId : undefined;
      resourceInputs["isSuperuser"] = state ? state.isSuperuser : undefined;
      resourceInputs["name"] = state ? state.name : undefined;
      resourceInputs["parent"] = state ? state.parent : undefined;
      resourceInputs["roles"] = state ? state.roles : undefined;
      resourceInputs["users"] = state ? state.users : undefined;
    } else {
      const args = argsOrState as GroupArgs | undefined;
      resourceInputs["attributes"] = args ? args.attributes : undefined;
      resourceInputs["groupId"] = args ? args.groupId : undefined;
      resourceInputs["isSuperuser"] = args ? args.isSuperuser : undefined;
      resourceInputs["name"] = args ? args.name : undefined;
      resourceInputs["parent"] = args ? args.parent : undefined;
      resourceInputs["roles"] = args ? args.roles : undefined;
      resourceInputs["users"] = args ? args.users : undefined;
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    super(Group.__pulumiType, name, resourceInputs, opts, false, /*dependency*/ utilities.getPackage());
  }
}

/**
 * Input properties used for looking up and filtering Group resources.
 */
export interface GroupState {
  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  attributes?: pulumi.Input<string>;
  groupId?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  isSuperuser?: pulumi.Input<boolean>;
  name?: pulumi.Input<string>;
  parent?: pulumi.Input<string>;
  roles?: pulumi.Input<pulumi.Input<string>[]>;
  /**
   * Generated.
   */
  users?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a Group resource.
 */
export interface GroupArgs {
  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  attributes?: pulumi.Input<string>;
  groupId?: pulumi.Input<string>;
  /**
   * Defaults to `false`.
   */
  isSuperuser?: pulumi.Input<boolean>;
  name?: pulumi.Input<string>;
  parent?: pulumi.Input<string>;
  roles?: pulumi.Input<pulumi.Input<string>[]>;
  /**
   * Generated.
   */
  users?: pulumi.Input<pulumi.Input<number>[]>;
}
