"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SystemSettings extends pulumi.CustomResource {
  /**
   * Get an existing SystemSettings resource's state with the given name, ID, and optional extra
   * properties used to qualify the lookup.
   *
   * @param name The _unique_ name of the resulting resource.
   * @param id The _unique_ provider ID of the resource to lookup.
   * @param state Any extra arguments used during the lookup.
   * @param opts Optional settings to control the behavior of the CustomResource.
   */
  static get(name, id, state, opts) {
    return new SystemSettings(name, state, Object.assign(Object.assign({}, opts), { id: id }));
  }
  /**
   * Returns true if the given object is an instance of SystemSettings.  This is designed to work even
   * when multiple copies of the Pulumi SDK have been loaded into the same process.
   */
  static isInstance(obj) {
    if (obj === undefined || obj === null) {
      return false;
    }
    return obj["__pulumiType"] === SystemSettings.__pulumiType;
  }
  constructor(name, argsOrState, opts) {
    let resourceInputs = {};
    opts = opts || {};
    if (opts.id) {
      const state = argsOrState;
      resourceInputs["avatars"] = state ? state.avatars : undefined;
      resourceInputs["defaultTokenDuration"] = state ? state.defaultTokenDuration : undefined;
      resourceInputs["defaultTokenLength"] = state ? state.defaultTokenLength : undefined;
      resourceInputs["defaultUserChangeEmail"] = state ? state.defaultUserChangeEmail : undefined;
      resourceInputs["defaultUserChangeName"] = state ? state.defaultUserChangeName : undefined;
      resourceInputs["defaultUserChangeUsername"] = state ? state.defaultUserChangeUsername : undefined;
      resourceInputs["eventRetention"] = state ? state.eventRetention : undefined;
      resourceInputs["footerLinks"] = state ? state.footerLinks : undefined;
      resourceInputs["gdprCompliance"] = state ? state.gdprCompliance : undefined;
      resourceInputs["impersonation"] = state ? state.impersonation : undefined;
      resourceInputs["reputationLowerLimit"] = state ? state.reputationLowerLimit : undefined;
      resourceInputs["reputationUpperLimit"] = state ? state.reputationUpperLimit : undefined;
      resourceInputs["systemSettingsId"] = state ? state.systemSettingsId : undefined;
    } else {
      const args = argsOrState;
      resourceInputs["avatars"] = args ? args.avatars : undefined;
      resourceInputs["defaultTokenDuration"] = args ? args.defaultTokenDuration : undefined;
      resourceInputs["defaultTokenLength"] = args ? args.defaultTokenLength : undefined;
      resourceInputs["defaultUserChangeEmail"] = args ? args.defaultUserChangeEmail : undefined;
      resourceInputs["defaultUserChangeName"] = args ? args.defaultUserChangeName : undefined;
      resourceInputs["defaultUserChangeUsername"] = args ? args.defaultUserChangeUsername : undefined;
      resourceInputs["eventRetention"] = args ? args.eventRetention : undefined;
      resourceInputs["footerLinks"] = args ? args.footerLinks : undefined;
      resourceInputs["gdprCompliance"] = args ? args.gdprCompliance : undefined;
      resourceInputs["impersonation"] = args ? args.impersonation : undefined;
      resourceInputs["reputationLowerLimit"] = args ? args.reputationLowerLimit : undefined;
      resourceInputs["reputationUpperLimit"] = args ? args.reputationUpperLimit : undefined;
      resourceInputs["systemSettingsId"] = args ? args.systemSettingsId : undefined;
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    super(SystemSettings.__pulumiType, name, resourceInputs, opts, false, /*dependency*/ utilities.getPackage());
  }
}
exports.SystemSettings = SystemSettings;
/** @internal */
SystemSettings.__pulumiType = "authentik:index/systemSettings:SystemSettings";
// # sourceMappingURL=systemSettings.js.map
