// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Brand extends pulumi.CustomResource {
  /**
   * Get an existing Brand resource's state with the given name, ID, and optional extra
   * properties used to qualify the lookup.
   *
   * @param name The _unique_ name of the resulting resource.
   * @param id The _unique_ provider ID of the resource to lookup.
   * @param state Any extra arguments used during the lookup.
   * @param opts Optional settings to control the behavior of the CustomResource.
   */
  public static get(
    name: string,
    id: pulumi.Input<pulumi.ID>,
    state?: BrandState,
    opts?: pulumi.CustomResourceOptions,
  ): Brand {
    return new Brand(name, <any> state, { ...opts, id: id });
  }

  /** @internal */
  public static readonly __pulumiType = "authentik:index/brand:Brand";

  /**
   * Returns true if the given object is an instance of Brand.  This is designed to work even
   * when multiple copies of the Pulumi SDK have been loaded into the same process.
   */
  public static isInstance(obj: any): obj is Brand {
    if (obj === undefined || obj === null) {
      return false;
    }
    return obj["__pulumiType"] === Brand.__pulumiType;
  }

  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  public readonly attributes!: pulumi.Output<string | undefined>;
  public readonly brandId!: pulumi.Output<string>;
  public readonly brandingCustomCss!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `/static/dist/assets/images/flow_background.jpg`.
   */
  public readonly brandingDefaultFlowBackground!: pulumi.Output<string | undefined>;
  public readonly brandingFavicon!: pulumi.Output<string | undefined>;
  public readonly brandingLogo!: pulumi.Output<string | undefined>;
  /**
   * Defaults to `authentik`.
   */
  public readonly brandingTitle!: pulumi.Output<string | undefined>;
  public readonly clientCertificates!: pulumi.Output<string[] | undefined>;
  /**
   * Defaults to `false`.
   */
  public readonly default!: pulumi.Output<boolean | undefined>;
  public readonly defaultApplication!: pulumi.Output<string | undefined>;
  public readonly domain!: pulumi.Output<string>;
  public readonly flowAuthentication!: pulumi.Output<string | undefined>;
  public readonly flowDeviceCode!: pulumi.Output<string | undefined>;
  public readonly flowInvalidation!: pulumi.Output<string | undefined>;
  public readonly flowRecovery!: pulumi.Output<string | undefined>;
  public readonly flowUnenrollment!: pulumi.Output<string | undefined>;
  public readonly flowUserSettings!: pulumi.Output<string | undefined>;
  public readonly webCertificate!: pulumi.Output<string | undefined>;

  /**
   * Create a Brand resource with the given unique name, arguments, and options.
   *
   * @param name The _unique_ name of the resource.
   * @param args The arguments to use to populate this resource's properties.
   * @param opts A bag of options that control this resource's behavior.
   */
  constructor(name: string, args: BrandArgs, opts?: pulumi.CustomResourceOptions);
  constructor(name: string, argsOrState?: BrandArgs | BrandState, opts?: pulumi.CustomResourceOptions) {
    let resourceInputs: pulumi.Inputs = {};
    opts = opts || {};
    if (opts.id) {
      const state = argsOrState as BrandState | undefined;
      resourceInputs["attributes"] = state ? state.attributes : undefined;
      resourceInputs["brandId"] = state ? state.brandId : undefined;
      resourceInputs["brandingCustomCss"] = state ? state.brandingCustomCss : undefined;
      resourceInputs["brandingDefaultFlowBackground"] = state ? state.brandingDefaultFlowBackground : undefined;
      resourceInputs["brandingFavicon"] = state ? state.brandingFavicon : undefined;
      resourceInputs["brandingLogo"] = state ? state.brandingLogo : undefined;
      resourceInputs["brandingTitle"] = state ? state.brandingTitle : undefined;
      resourceInputs["clientCertificates"] = state ? state.clientCertificates : undefined;
      resourceInputs["default"] = state ? state.default : undefined;
      resourceInputs["defaultApplication"] = state ? state.defaultApplication : undefined;
      resourceInputs["domain"] = state ? state.domain : undefined;
      resourceInputs["flowAuthentication"] = state ? state.flowAuthentication : undefined;
      resourceInputs["flowDeviceCode"] = state ? state.flowDeviceCode : undefined;
      resourceInputs["flowInvalidation"] = state ? state.flowInvalidation : undefined;
      resourceInputs["flowRecovery"] = state ? state.flowRecovery : undefined;
      resourceInputs["flowUnenrollment"] = state ? state.flowUnenrollment : undefined;
      resourceInputs["flowUserSettings"] = state ? state.flowUserSettings : undefined;
      resourceInputs["webCertificate"] = state ? state.webCertificate : undefined;
    } else {
      const args = argsOrState as BrandArgs | undefined;
      if ((!args || args.domain === undefined) && !opts.urn) {
        throw new Error("Missing required property 'domain'");
      }
      resourceInputs["attributes"] = args ? args.attributes : undefined;
      resourceInputs["brandId"] = args ? args.brandId : undefined;
      resourceInputs["brandingCustomCss"] = args ? args.brandingCustomCss : undefined;
      resourceInputs["brandingDefaultFlowBackground"] = args ? args.brandingDefaultFlowBackground : undefined;
      resourceInputs["brandingFavicon"] = args ? args.brandingFavicon : undefined;
      resourceInputs["brandingLogo"] = args ? args.brandingLogo : undefined;
      resourceInputs["brandingTitle"] = args ? args.brandingTitle : undefined;
      resourceInputs["clientCertificates"] = args ? args.clientCertificates : undefined;
      resourceInputs["default"] = args ? args.default : undefined;
      resourceInputs["defaultApplication"] = args ? args.defaultApplication : undefined;
      resourceInputs["domain"] = args ? args.domain : undefined;
      resourceInputs["flowAuthentication"] = args ? args.flowAuthentication : undefined;
      resourceInputs["flowDeviceCode"] = args ? args.flowDeviceCode : undefined;
      resourceInputs["flowInvalidation"] = args ? args.flowInvalidation : undefined;
      resourceInputs["flowRecovery"] = args ? args.flowRecovery : undefined;
      resourceInputs["flowUnenrollment"] = args ? args.flowUnenrollment : undefined;
      resourceInputs["flowUserSettings"] = args ? args.flowUserSettings : undefined;
      resourceInputs["webCertificate"] = args ? args.webCertificate : undefined;
    }
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    super(Brand.__pulumiType, name, resourceInputs, opts, false, /*dependency*/ utilities.getPackage());
  }
}

/**
 * Input properties used for looking up and filtering Brand resources.
 */
export interface BrandState {
  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  attributes?: pulumi.Input<string>;
  brandId?: pulumi.Input<string>;
  brandingCustomCss?: pulumi.Input<string>;
  /**
   * Defaults to `/static/dist/assets/images/flow_background.jpg`.
   */
  brandingDefaultFlowBackground?: pulumi.Input<string>;
  brandingFavicon?: pulumi.Input<string>;
  brandingLogo?: pulumi.Input<string>;
  /**
   * Defaults to `authentik`.
   */
  brandingTitle?: pulumi.Input<string>;
  clientCertificates?: pulumi.Input<pulumi.Input<string>[]>;
  /**
   * Defaults to `false`.
   */
  default?: pulumi.Input<boolean>;
  defaultApplication?: pulumi.Input<string>;
  domain?: pulumi.Input<string>;
  flowAuthentication?: pulumi.Input<string>;
  flowDeviceCode?: pulumi.Input<string>;
  flowInvalidation?: pulumi.Input<string>;
  flowRecovery?: pulumi.Input<string>;
  flowUnenrollment?: pulumi.Input<string>;
  flowUserSettings?: pulumi.Input<string>;
  webCertificate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Brand resource.
 */
export interface BrandArgs {
  /**
   * JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
   */
  attributes?: pulumi.Input<string>;
  brandId?: pulumi.Input<string>;
  brandingCustomCss?: pulumi.Input<string>;
  /**
   * Defaults to `/static/dist/assets/images/flow_background.jpg`.
   */
  brandingDefaultFlowBackground?: pulumi.Input<string>;
  brandingFavicon?: pulumi.Input<string>;
  brandingLogo?: pulumi.Input<string>;
  /**
   * Defaults to `authentik`.
   */
  brandingTitle?: pulumi.Input<string>;
  clientCertificates?: pulumi.Input<pulumi.Input<string>[]>;
  /**
   * Defaults to `false`.
   */
  default?: pulumi.Input<boolean>;
  defaultApplication?: pulumi.Input<string>;
  domain: pulumi.Input<string>;
  flowAuthentication?: pulumi.Input<string>;
  flowDeviceCode?: pulumi.Input<string>;
  flowInvalidation?: pulumi.Input<string>;
  flowRecovery?: pulumi.Input<string>;
  flowUnenrollment?: pulumi.Input<string>;
  flowUserSettings?: pulumi.Input<string>;
  webCertificate?: pulumi.Input<string>;
}
